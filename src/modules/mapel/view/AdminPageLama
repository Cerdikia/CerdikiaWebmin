"use client"

import { useState, useEffect } from "react"
import { useNavigate } from "react-router-dom"
import {
  Loader2,
  Plus,
  Trash2,
  Edit,
  Book,
  FileSpreadsheet,
  Upload,
} from "lucide-react"
import MapelModal from "../../../components/MapelPage/MapelModal"
import DeleteMapelModal from "../../../components/MapelPage/DeleteMapelModal"

export default function AdminPage() {
  const navigate = useNavigate()
  const [mapelList, setMapelList] = useState([])
  const [isLoading, setIsLoading] = useState(true)
  const [error, setError] = useState(null)
  const [showAddModal, setShowAddModal] = useState(false)
  const [showEditModal, setShowEditModal] = useState(false)
  const [showDeleteModal, setShowDeleteModal] = useState(false)
  const [selectedMapel, setSelectedMapel] = useState(null)

  useEffect(() => {
    fetchMapelList()
  }, [])

  const fetchMapelList = async () => {
    setIsLoading(true)
    setError(null)

    try {
      const response = await fetch(`${import.meta.env.VITE_API_URL}/mapel`, {
        headers: {
          Authorization: `Bearer ${localStorage.getItem("access_token")}`,
        },
      })

      if (!response.ok) {
        throw new Error("Failed to fetch subject list")
      }

      const data = await response.json()
      setMapelList(data.Data || [])
    } catch (err) {
      console.error("Fetch error:", err)
      setError("Failed to load subjects. Please try again.")
    } finally {
      setIsLoading(false)
    }
  }

  const handleAddMapel = () => {
    setSelectedMapel(null)
    setShowAddModal(true)
  }

  const handleEditMapel = (mapel) => {
    setSelectedMapel(mapel)
    setShowEditModal(true)
  }

  const handleDeleteMapel = (mapel) => {
    setSelectedMapel(mapel)
    setShowDeleteModal(true)
  }

  const handleViewModules = (mapelId) => {
    navigate(`/list-module/${mapelId}`)
  }

  const handleImportModule = () => {
    navigate("/import-module")
  }

  const handleModalClose = (refresh = false) => {
    setShowAddModal(false)
    setShowEditModal(false)
    setShowDeleteModal(false)

    if (refresh) {
      fetchMapelList()
    }
  }

  return (
    <div className="container mx-auto p-4">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold text-gray-900 dark:text-white">
          Manage Subjects
        </h1>
        <div className="flex space-x-2">
          <button
            onClick={handleImportModule}
            className="flex items-center px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 font-medium"
          >
            <Upload className="w-4 h-4 mr-2" />
            Import Modules
          </button>
          <button
            onClick={handleAddMapel}
            className="flex items-center px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 font-medium"
          >
            <Plus className="w-4 h-4 mr-2" />
            Add Subject
          </button>
        </div>
      </div>

      {error && (
        <div className="mb-6 p-4 border-l-4 border-red-500 bg-red-50 dark:bg-red-900/20 text-red-700 dark:text-red-400">
          {error}
        </div>
      )}

      {isLoading ? (
        <div className="flex justify-center items-center h-64">
          <Loader2 className="w-8 h-8 text-indigo-600 animate-spin" />
        </div>
      ) : mapelList.length === 0 ? (
        <div className="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 text-center">
          <FileSpreadsheet className="w-16 h-16 mx-auto text-gray-400 dark:text-gray-600 mb-4" />
          <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-2">
            No subjects found
          </h3>
          <p className="text-gray-500 dark:text-gray-400 mb-4">
            Get started by adding your first subject or importing modules.
          </p>
          <div className="flex justify-center space-x-3">
            <button
              onClick={handleImportModule}
              className="flex items-center px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 font-medium"
            >
              <Upload className="w-4 h-4 mr-2" />
              Import Modules
            </button>
            <button
              onClick={handleAddMapel}
              className="flex items-center px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 font-medium"
            >
              <Plus className="w-4 h-4 mr-2" />
              Add Subject
            </button>
          </div>
        </div>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {mapelList.map((mapel) => (
            <div
              key={mapel.id_mapel}
              className="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300"
            >
              <div className="p-6">
                <h2 className="text-xl font-bold text-gray-900 dark:text-white mb-2">
                  {mapel.nama_mapel}
                </h2>
                <p className="text-gray-500 dark:text-gray-400 mb-4">
                  {mapel.deskripsi || "No description available"}
                </p>
                <div className="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4">
                  <span className="bg-indigo-100 dark:bg-indigo-900/30 text-indigo-800 dark:text-indigo-300 px-2 py-1 rounded text-xs font-medium">
                    Class {mapel.kelas}
                  </span>
                </div>
                <div className="flex justify-between items-center">
                  <button
                    onClick={() => handleViewModules(mapel.id_mapel)}
                    className="flex items-center text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 font-medium text-sm"
                  >
                    <Book className="w-4 h-4 mr-1" />
                    View Modules
                  </button>
                  <div className="flex space-x-2">
                    <button
                      onClick={() => handleEditMapel(mapel)}
                      className="p-2 text-gray-500 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full"
                      aria-label="Edit subject"
                    >
                      <Edit className="w-4 h-4" />
                    </button>
                    <button
                      onClick={() => handleDeleteMapel(mapel)}
                      className="p-2 text-gray-500 dark:text-gray-400 hover:text-red-600 dark:hover:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full"
                      aria-label="Delete subject"
                    >
                      <Trash2 className="w-4 h-4" />
                    </button>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* Add Modal */}
      {showAddModal && (
        <MapelModal onClose={handleModalClose} mapel={null} isEdit={false} />
      )}

      {/* Edit Modal */}
      {showEditModal && (
        <MapelModal
          onClose={handleModalClose}
          mapel={selectedMapel}
          isEdit={true}
        />
      )}

      {/* Delete Modal */}
      {showDeleteModal && (
        <DeleteMapelModal onClose={handleModalClose} mapel={selectedMapel} />
      )}
    </div>
  )
}
